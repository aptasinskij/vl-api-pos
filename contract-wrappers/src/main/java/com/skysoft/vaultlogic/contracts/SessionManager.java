package com.skysoft.vaultlogic.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.contracts.SmartContractEvent;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class SessionManager extends Contract {
    private static final String BINARY = "0x60806040523480156200001157600080fd5b50604051602080620025fd8339810160408181529151828201909252600f8082527f73657373696f6e2d6d616e6167657200000000000000000000000000000000006020830190815260008054600160a060020a031916331781558493909290916200008191600191906200044e565b505081600160a060020a031663713b563f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620000db57600080fd5b505af1158015620000f0573d6000803e3d6000fd5b505050506040513d60208110156200010757600080fd5b505160038054600160a060020a031916600160a060020a03928316179055604080517fd0496d6a00000000000000000000000000000000000000000000000000000000815290519184169163d0496d6a916004808201926020929091908290030181600087803b1580156200017b57600080fd5b505af115801562000190573d6000803e3d6000fd5b505050506040513d6020811015620001a757600080fd5b505160028054600160a060020a031916600160a060020a03928316178082556040517f693ec85e00000000000000000000000000000000000000000000000000000000815260206004820190815260018054610100818316150260001901169490940460248301819052929094169363693ec85e939290918291604490910190849080156200027a5780601f106200024e576101008083540402835291602001916200027a565b820191906000526020600020905b8154815290600101906020018083116200025c57829003601f168201915b505092505050602060405180830381600087803b1580156200029b57600080fd5b505af1158015620002b0573d6000803e3d6000fd5b505050506040513d6020811015620002c757600080fd5b50519050600160a060020a038116156200034d5780600160a060020a03166341c0e1b56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156200033357600080fd5b505af115801562000348573d6000803e3d6000fd5b505050505b600280546040517ff2c298be00000000000000000000000000000000000000000000000000000000815260206004820190815260018054600019818316156101000201169490940460248301819052600160a060020a039093169363f2c298be9390928291604490910190849080156200040b5780601f10620003df576101008083540402835291602001916200040b565b820191906000526020600020905b815481529060010190602001808311620003ed57829003601f168201915b505092505050600060405180830381600087803b1580156200042c57600080fd5b505af115801562000441573d6000803e3d6000fd5b50505050505050620004f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049157805160ff1916838001178555620004c1565b82800160010185558215620004c1579182015b82811115620004c1578251825591602001919060010190620004a4565b50620004cf929150620004d3565b5090565b620004f091905b80821115620004cf5760008155600101620004da565b90565b6120fa80620005036000396000f3006080604052600436106100a05763ffffffff60e060020a60003504166306fdde0381146100a5578063081907261461012f57806341c0e1b5146101cf5780634c4d4dba146101e45780635a1695af146101fc57806382afd23b14610228578063882d5f7a146102405780638da5cb5b14610258578063a3bfdf4714610289578063b260c42a146102a1578063cf82c582146102b9578063dcc22cfe146102d1575b600080fd5b3480156100b157600080fd5b506100ba6102f5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f45781810151838201526020016100dc565b50505050905090810190601f1680156101215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013b57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506103829650505050505050565b005b3480156101db57600080fd5b506101cd610413565b3480156101f057600080fd5b506101cd600435610479565b34801561020857600080fd5b5061021460043561049a565b604080519115158252519081900360200190f35b34801561023457600080fd5b506102146004356104bf565b34801561024c57600080fd5b506101cd6004356104f1565b34801561026457600080fd5b5061026d6105dd565b60408051600160a060020a039092168252519081900360200190f35b34801561029557600080fd5b506101cd6004356105ec565b3480156102ad57600080fd5b506101cd600435610853565b3480156102c557600080fd5b506101cd60043561091f565b3480156102dd57600080fd5b50610214600435600160a060020a036024351661093d565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b505050505081565b61038a612065565b600060e060405190810160405280878152602001868152602001848152602001858152602001600060048111156103bd57fe5b81526000602082018190526040909101526003549092506103ed90600160a060020a03168363ffffffff6109bc16565b5060035461040a90600160a060020a03168763ffffffff61142616565b50505050505050565b600054600160a060020a03163214610475576040805160e560020a62461bcd02815260206004820152601260248201527f6f6e6c79206f776e657220616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6000ff5b60035461049790600160a060020a031682600063ffffffff6114b216565b50565b6003546000906104b990600160a060020a03168363ffffffff61166b16565b92915050565b600060016003546104df90600160a060020a03168463ffffffff6117d916565b60048111156104ea57fe5b1492915050565b600354600090819061051290600160a060020a03168463ffffffff6117d916565b9150600382600481111561052257fe5b1461059d576040805160e560020a62461bcd02815260206004820152603d60248201527f53657373696f6e20636f6e6669726d20636c6f7365206661696c65642e20526560448201527f71756972656420434c4f53455f5245515545535445442073746174652e000000606482015290519081900360840190fd5b6003546105bb90600160a060020a031684600463ffffffff61193916565b6003546105d790600160a060020a03168463ffffffff61142616565b50505050565b600054600160a060020a031681565b60035460009061060b90600160a060020a03168363ffffffff6117d916565b9050600181600481111561061b57fe5b14610696576040805160e560020a62461bcd02815260206004820152603460248201527f53657373696f6e207265717565737420636c6f7365206661696c65642e20526560448201527f717569726564204143544956452073746174652e000000000000000000000000606482015290519081900360840190fd5b600380546106b791600160a060020a0390911690849063ffffffff61193916565b600254604080518082018252600e81527f73657373696f6e2d6f7261636c65000000000000000000000000000000000000602080830191825292517f693ec85e00000000000000000000000000000000000000000000000000000000815260048101938452825160248201528251600160a060020a039095169463693ec85e949283926044019180838360005b8381101561075c578181015183820152602001610744565b50505050905090810190601f1680156107895780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156107a857600080fd5b505af11580156107bc573d6000803e3d6000fd5b505050506040513d60208110156107d257600080fd5b5051604080517fa3bfdf47000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a039092169163a3bfdf479160248082019260009290919082900301818387803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b505050505050565b60035460009061087290600160a060020a03168363ffffffff6117d916565b9050600081600481111561088257fe5b146108fd576040805160e560020a62461bcd02815260206004820152603260248201527f53657373696f6e2061637469766174696f6e206661696c65642e20526571756960448201527f726564204352454154494e472073746174650000000000000000000000000000606482015290519081900360840190fd5b60035461091b90600160a060020a031683600163ffffffff61193916565b5050565b60035461049790600160a060020a031682600163ffffffff6114b216565b60035460009061095c90600160a060020a03168463ffffffff611a8016565b15610966576104b9565b60035461098390600160a060020a0316848463ffffffff611bf616565b1561098d576104b9565b6003546109a990600160a060020a03168463ffffffff61166b16565b156109b3576104b9565b50600192915050565b60006109cc838360000151611c1f565b15610a21576040805160e560020a62461bcd02815260206004820152601960248201527f53657373696f6e20697320616c72656164792065786973747300000000000000604482015290519081900360640190fd5b6040820151610a4090600160a060020a0385169063ffffffff611c9816565b1515610a96576040805160e560020a62461bcd02815260206004820152601360248201527f4b696f736b206973206e6f742065786973747300000000000000000000000000604482015290519081900360640190fd5b6020820151610ab590600160a060020a0385169063ffffffff611dbd16565b1515610b0b576040805160e560020a62461bcd02815260206004820152601960248201527f4170706c69636174696f6e206973206e6f742065786973747300000000000000604482015290519081900360640190fd5b82600160a060020a031663ffb4f6236040805190810160405280600a81526020017f73657373696f6e5f69640000000000000000000000000000000000000000000081525084600001516040516020018083805190602001908083835b60208310610b875780518252601f199092019160209182019101610b68565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b60208310610be75780518252601f199092019160209182019101610bc8565b5181516020939093036101000a600019018019909116921691909117905260408051919093018190038120895163ffffffff881660e060020a02835260048301919091526024820152915160448084019550600094509092839003019050818387803b158015610c5657600080fd5b505af1158015610c6a573d6000803e3d6000fd5b5050505082600160a060020a031663ffb4f6236040805190810160405280601681526020017f73657373696f6e5f6170706c69636174696f6e5f69640000000000000000000081525084600001516040516020018083805190602001908083835b60208310610cea5780518252601f199092019160209182019101610ccb565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b60208310610d4a5780518252601f199092019160209182019101610d2b565b51815160209384036101000a600019018019909216911617905260408051929094018290038220908a015163ffffffff881660e060020a02835260048301919091526024820152915160448084019550600094509092839003019050818387803b158015610db757600080fd5b505af1158015610dcb573d6000803e3d6000fd5b5050505082600160a060020a031663f58660666040805190810160405280601081526020017f73657373696f6e5f6b696f736b5f69640000000000000000000000000000000081525084600001516040516020018083805190602001908083835b60208310610e4b5780518252601f199092019160209182019101610e2c565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b60208310610eab5780518252601f199092019160209182019101610e8c565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a85015163ffffffff891660e060020a02845260048401828152602485019687528151604486015281519298509096509493506064909201919085019080838360005b83811015610f2d578181015183820152602001610f15565b50505050905090810190601f168015610f5a5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015610f7a57600080fd5b505af1158015610f8e573d6000803e3d6000fd5b5050505082600160a060020a031663f58660666040805190810160405280600f81526020017f73657373696f6e5f785f746f6b656e000000000000000000000000000000000081525084600001516040516020018083805190602001908083835b6020831061100e5780518252601f199092019160209182019101610fef565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b6020831061106e5780518252601f19909201916020918201910161104f565b51815160209384036101000a60001901801990921691161790526040805192909401829003822060608b015163ffffffff891660e060020a02845260048401828152602485019687528151604486015281519298509096509493506064909201919085019080838360005b838110156110f15781810151838201526020016110d9565b50505050905090810190601f16801561111e5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561113e57600080fd5b505af1158015611152573d6000803e3d6000fd5b5050505082600160a060020a031663ffb4f6236040805190810160405280600e81526020016000805160206120af83398151915281525084600001516040516020018083805190602001908083835b602083106111c05780518252601f1990920191602091820191016111a1565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106112205780518252601f199092019160209182019101611201565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208460800151600481111561125d57fe5b6040518363ffffffff1660e060020a02815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b5050505082600160a060020a0316633eba9ed26040805190810160405280600e81526020017f73657373696f6e2e65786973747300000000000000000000000000000000000081525084600001516040516020018083805190602001908083835b602083106113395780518252601f19909201916020918201910161131a565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106113995780518252601f19909201916020918201910161137a565b5181516020939093036101000a60001901801990911692169190911790526040805191909301819003812063ffffffff871660e060020a028252600482015260016024820152915160448084019550600094509092839003019050818387803b15801561140557600080fd5b505af1158015611419573d6000803e3d6000fd5b5060019695505050505050565b60006114328383611c1f565b1515611488576040805160e560020a62461bcd02815260206004820152601560248201527f53657373696f6e206973206e6f74206578697374730000000000000000000000604482015290519081900360640190fd5b6114ab6114958484611e36565b600160a060020a0385169063ffffffff611eaf16565b9392505050565b6114bc8383611c1f565b1515611512576040805160e560020a62461bcd02815260206004820152601560248201527f53657373696f6e206973206e6f74206578697374730000000000000000000000604482015290519081900360640190fd5b82600160a060020a0316633eba9ed26040805190810160405280601a81526020017f73657373696f6e5f6861735f6163746976655f636173685f696e000000000000815250846040516020018083805190602001908083835b6020831061158a5780518252601f19909201916020918201910161156b565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106115ea5780518252601f1990920191602091820191016115cb565b5181516020939093036101000a60001901801990911692169190911790526040805191909301819003812063ffffffff871660e060020a02825260048201528715156024820152915160448084019550600094509092839003019050818387803b15801561165757600080fd5b505af115801561040a573d6000803e3d6000fd5b600082600160a060020a03166317e7dd226040805190810160405280601a81526020017f73657373696f6e5f6861735f6163746976655f636173685f696e000000000000815250846040516020018083805190602001908083835b602083106116e55780518252601f1990920191602091820191016116c6565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106117455780518252601f199092019160209182019101611726565b51815160209384036101000a60001901801990921691161790526040805192909401829003822063ffffffff881660e060020a0283526004830152925160248083019650939450929083900301905081600087803b1580156117a657600080fd5b505af11580156117ba573d6000803e3d6000fd5b505050506040513d60208110156117d057600080fd5b50519392505050565b600082600160a060020a031663e82617fb6040805190810160405280600e81526020016000805160206120af833981519152815250846040516020018083805190602001908083835b602083106118415780518252601f199092019160209182019101611822565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106118a15780518252601f199092019160209182019101611882565b51815160209384036101000a60001901801990921691161790526040805192909401829003822063ffffffff881660e060020a0283526004830152925160248083019650939450929083900301905081600087803b15801561190257600080fd5b505af1158015611916573d6000803e3d6000fd5b505050506040513d602081101561192c57600080fd5b505160048111156114ab57fe5b82600160a060020a031663ffb4f6236040805190810160405280600e81526020016000805160206120af833981519152815250846040516020018083805190602001908083835b6020831061199f5780518252601f199092019160209182019101611980565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106119ff5780518252601f1990920191602091820191016119e0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020836004811115611a3857fe5b6040518363ffffffff1660e060020a02815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b15801561165757600080fd5b6000600183600160a060020a031663e82617fb6040805190810160405280600e81526020016000805160206120af833981519152815250856040516020018083805190602001908083835b60208310611aea5780518252601f199092019160209182019101611acb565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b60208310611b4a5780518252601f199092019160209182019101611b2b565b51815160209384036101000a60001901801990921691161790526040805192909401829003822063ffffffff881660e060020a0283526004830152925160248083019650939450929083900301905081600087803b158015611bab57600080fd5b505af1158015611bbf573d6000803e3d6000fd5b505050506040513d6020811015611bd557600080fd5b50516004811115611be257fe5b6004811115611bed57fe5b14159392505050565b600081600160a060020a0316611c0c8585611426565b600160a060020a03161415949350505050565b600082600160a060020a03166317e7dd226040805190810160405280600e81526020017f73657373696f6e2e65786973747300000000000000000000000000000000000081525084604051602001808380519060200190808383602083106116e55780518252601f1990920191602091820191016116c6565b600082600160a060020a03166317e7dd226040805190810160405280600c81526020017f6b696f736b2e6578697374730000000000000000000000000000000000000000815250846040516020018083805190602001908083835b60208310611d125780518252601f199092019160209182019101611cf3565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310611d5a5780518252601f199092019160209182019101611d3b565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052604051808280519060200190808383602083106117455780518252601f199092019160209182019101611726565b600082600160a060020a03166317e7dd226040805190810160405280601281526020017f6170706c69636174696f6e2e657869737473000000000000000000000000000081525084604051602001808380519060200190808383602083106116e55780518252601f1990920191602091820191016116c6565b600082600160a060020a031663e82617fb6040805190810160405280601681526020017f73657373696f6e5f6170706c69636174696f6e5f69640000000000000000000081525084604051602001808380519060200190808383602083106116e55780518252601f1990920191602091820191016116c6565b6000611ebb8383611dbd565b1515611f11576040805160e560020a62461bcd02815260206004820152601960248201527f4170706c69636174696f6e206973206e6f742065786973747300000000000000604482015290519081900360640190fd5b82600160a060020a0316634c77e5ba611f5f6040805190810160405280601381526020017f6170706c69636174696f6e5f616464726573730000000000000000000000000081525085611f9c565b6040805160e060020a63ffffffff851602815260048101929092525160248083019260209291908290030181600087803b1580156117a657600080fd5b600082826040516020018083805190602001908083835b60208310611fd25780518252601f199092019160209182019101611fb3565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b602083106120325780518252601f199092019160209182019101612013565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209695505050505050565b60e060405190810160405280600081526020016000815260200160608152602001606081526020016000600481111561209a57fe5b815260006020820181905260409091015290560073657373696f6e5f737461747573000000000000000000000000000000000000a165627a7a7230582022be1f7ec0aafd56b86ba39377d05aadaf6df777ee690f5aa730cb72f2adba870029";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_KILL = "kill";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_CREATESESSION = "createSession";

    public static final String FUNC_CLOSESESSION = "closeSession";

    public static final String FUNC_CONFIRMCLOSE = "confirmClose";

    public static final String FUNC_ISACTIVE = "isActive";

    public static final String FUNC_ISHASACTIVECASHIN = "isHasActiveCashIn";

    public static final String FUNC_ACTIVATE = "activate";

    public static final String FUNC_VALIDATECANOPENCASHIN = "validateCanOpenCashIn";

    public static final String FUNC_SETSESSIONHASACTIVECASHIN = "setSessionHasActiveCashIn";

    public static final String FUNC_SETSESSIONISNOTHASACTIVECASHIN = "setSessionIsNotHasActiveCashIn";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("84107", "0x3a4a7200509bc60df011952387fde215fd6ccd79");
        _addresses.put("37609", "0x27228f4eba1e7a7e7eaa08d9f04c646004b01f8d");
        _addresses.put("5777", "0xb6f3a2b85304efe6d04f099f6520b7589a64cab2");
    }

    protected SessionManager(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SessionManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<String> name() {
        final Function function = new Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> kill() {
        final Function function = new Function(
                FUNC_KILL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<SessionManager> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _config) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_config)));
        return deployRemoteCall(SessionManager.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<SessionManager> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _config) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_config)));
        return deployRemoteCall(SessionManager.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public RemoteCall<TransactionReceipt> createSession(BigInteger _sessionId, BigInteger _appId, String _xToken, String _kioskId) {
        final Function function = new Function(
                FUNC_CREATESESSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId), 
                new org.web3j.abi.datatypes.generated.Uint256(_appId), 
                new org.web3j.abi.datatypes.Utf8String(_xToken), 
                new org.web3j.abi.datatypes.Utf8String(_kioskId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> closeSession(BigInteger _sessionId) {
        final Function function = new Function(
                FUNC_CLOSESESSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> confirmClose(BigInteger _sessionId) {
        final Function function = new Function(
                FUNC_CONFIRMCLOSE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> isActive(BigInteger _sessionId) {
        final Function function = new Function(FUNC_ISACTIVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> isHasActiveCashIn(BigInteger _sessionId) {
        final Function function = new Function(FUNC_ISHASACTIVECASHIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> activate(BigInteger _sessionId) {
        final Function function = new Function(
                FUNC_ACTIVATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> validateCanOpenCashIn(BigInteger _sessionId, String _application) {
        final Function function = new Function(FUNC_VALIDATECANOPENCASHIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId), 
                new org.web3j.abi.datatypes.Address(_application)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> setSessionHasActiveCashIn(BigInteger _sessionId) {
        final Function function = new Function(
                FUNC_SETSESSIONHASACTIVECASHIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setSessionIsNotHasActiveCashIn(BigInteger _sessionId) {
        final Function function = new Function(
                FUNC_SETSESSIONISNOTHASACTIVECASHIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sessionId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static SessionManager load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SessionManager(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static SessionManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SessionManager(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public interface SessionManagerEvent extends SmartContractEvent {
    }
}
