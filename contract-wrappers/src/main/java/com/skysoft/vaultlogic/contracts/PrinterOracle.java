package com.skysoft.vaultlogic.contracts;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.contracts.SmartContractEvent;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class PrinterOracle extends Contract {
    private static final String BINARY = "0x60806040523480156200001157600080fd5b5060405160208062003189833981018060405281019080805190602001909291905050508060006040805190810160405280600e81526020017f7072696e7465722d6f7261636c65000000000000000000000000000000000000815250336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060019080519060200190620000c6929190620005bf565b50508173ffffffffffffffffffffffffffffffffffffffff1663713b563f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200012d57600080fd5b505af115801562000142573d6000803e3d6000fd5b505050506040513d60208110156200015957600080fd5b8101908080519060200190929190505050600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1663d0496d6a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200020f57600080fd5b505af115801562000224573d6000803e3d6000fd5b505050506040513d60208110156200023b57600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e60016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620003845780601f10620003585761010080835404028352916020019162000384565b820191906000526020600020905b8154815290600101906020018083116200036657829003601f168201915b505092505050602060405180830381600087803b158015620003a557600080fd5b505af1158015620003ba573d6000803e3d6000fd5b505050506040513d6020811015620003d157600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1614151562000484578073ffffffffffffffffffffffffffffffffffffffff166341c0e1b56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156200046a57600080fd5b505af11580156200047f573d6000803e3d6000fd5b505050505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2c298be60016040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156200057c5780601f1062000550576101008083540402835291602001916200057c565b820191906000526020600020905b8154815290600101906020018083116200055e57829003601f168201915b505092505050600060405180830381600087803b1580156200059d57600080fd5b505af1158015620005b2573d6000803e3d6000fd5b505050505050506200066e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200060257805160ff191683800117855562000633565b8280016001018555821562000633579182015b828111156200063257825182559160200191906001019062000615565b5b50905062000642919062000646565b5090565b6200066b91905b80821115620006675760008160009055506001016200064d565b5090565b90565b612b0b806200067e6000396000f300608060405260043610610098576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680627a59831461009d57806306fdde031461015657806341c0e1b5146101e65780634693b378146101fd5780638d79e81c1461022a5780638da5cb5b1461026f578063a30140a6146102c6578063c642b4ae1461030b578063e330bf7314610338575b600080fd5b3480156100a957600080fd5b5061015460048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610365565b005b34801561016257600080fd5b5061016b6106f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ab578082015181840152602081019050610190565b50505050905090810190601f1680156101d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f257600080fd5b506101fb610792565b005b34801561020957600080fd5b506102286004803603810190808035906020019092919050505061085a565b005b34801561023657600080fd5b5061025560048036038101908080359060200190929190505050610b0d565b604051808215151515815260200191505060405180910390f35b34801561027b57600080fd5b50610284610d04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d257600080fd5b506102f160048036038101908080359060200190929190505050610d29565b604051808215151515815260200191505060405180910390f35b34801561031757600080fd5b5061033660048036038101908080359060200190929190505050610dcd565b005b34801561034457600080fd5b5061036360048036038101908080359060200190929190505050611080565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040805190810160405280600f81526020017f7072696e7465722d6d616e6167657200000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105085780820151818401526020810190506104ed565b50505050905090810190601f1680156105355780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b505050506040513d602081101561057e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166307fac4968484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610622578082015181840152602081019050610607565b50505050905090810190601f16801561064f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561068857808201518184015260208101905061066d565b50505050905090810190601f1680156106b55780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156106d757600080fd5b505af11580156106eb573d6000803e3d6000fd5b50505050505050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561078a5780601f1061075f5761010080835404028352916020019161078a565b820191906000526020600020905b81548152906001019060200180831161076d57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16141515610856576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000081525060200191505060405180910390fd5b6000ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561091e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040805190810160405280600f81526020017f7072696e7465722d6d616e6167657200000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109fd5780820151818401526020810190506109e2565b50505050905090810190601f168015610a2a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b505050506040513d6020811015610a7357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166376eefe27826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610af257600080fd5b505af1158015610b06573d6000803e3d6000fd5b5050505050565b6000610b17612a0c565b610b6283600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661133390919063ffffffff16565b90507f2002963a3c2b2da8c4d63a883c9fbbec67feac2bdafde7da25157ecf89f9081383826020015183604001518460600151856080015160405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610bee578082015181840152602081019050610bd3565b50505050905090810190601f168015610c1b5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015610c54578082015181840152602081019050610c39565b50505050905090810190601f168015610c815780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610cba578082015181840152602081019050610c9f565b50505050905090810190601f168015610ce75780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a16001915050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d33612a80565b610d7e83600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fe990919063ffffffff16565b90507f62b01c50ba4b1e21a4796deffb7e07540187fffcca5e57189085a08fbfaaaef7838260200151604051808381526020018281526020019250505060405180910390a16001915050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040805190810160405280600f81526020017f7072696e7465722d6d616e6167657200000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f70578082015181840152602081019050610f55565b50505050905090810190601f168015610f9d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610fbc57600080fd5b505af1158015610fd0573d6000803e3d6000fd5b505050506040513d6020811015610fe657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166331e2ab8a826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561106557600080fd5b505af1158015611079573d6000803e3d6000fd5b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611144576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040805190810160405280600f81526020017f7072696e7465722d6d616e6167657200000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611223578082015181840152602081019050611208565b50505050905090810190601f1680156112505780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b505050506040513d602081101561129957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166352e215ef826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561131857600080fd5b505af115801561132c573d6000803e3d6000fd5b5050505050565b61133b612a0c565b611345838361267e565b15156113b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f72656365697074207072696e74206973206e6f7420657869737473000000000081525060200191505060405180910390fd5b60e0604051908101604052808381526020018473ffffffffffffffffffffffffffffffffffffffff1663e82617fb6040805190810160405280602081526020017f726563656970742d7072696e742e73657373696f6e2e69643a75696e74323536815250866040516020018083805190602001908083835b6020831015156114565780518252602082019150602081019050602083039250611431565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156114c657805182526020820191506020810190506020830392506114a1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561154d57600080fd5b505af1158015611561573d6000803e3d6000fd5b505050506040513d602081101561157757600080fd5b810190808051906020019092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff1663a209a29c6040805190810160405280601f81526020017f726563656970742d7072696e742e726563656970745f69643a737472696e6700815250866040516020018083805190602001908083835b60208310151561161857805182526020820191506020810190506020830392506115f3565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156116885780518252602082019150602081019050602083039250611663565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561170f57600080fd5b505af1158015611723573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561174d57600080fd5b81019080805164010000000081111561176557600080fd5b8281019050602081018481111561177b57600080fd5b815185600182028301116401000000008211171561179857600080fd5b505092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff1663a209a29c6040805190810160405280601981526020017f726563656970742d7072696e742e646174613a737472696e6700000000000000815250866040516020018083805190602001908083835b602083101515611830578051825260208201915060208101905060208303925061180b565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156118a0578051825260208201915060208101905060208303925061187b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561192757600080fd5b505af115801561193b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561196557600080fd5b81019080805164010000000081111561197d57600080fd5b8281019050602081018481111561199357600080fd5b81518560018202830111640100000000821117156119b057600080fd5b505092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff1663a209a29c6040805190810160405280601b81526020017f726563656970742d7072696e742e706172616d733a737472696e670000000000815250866040516020018083805190602001908083835b602083101515611a485780518252602082019150602081019050602083039250611a23565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611ab85780518252602082019150602081019050602083039250611a93565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015611b3f57600080fd5b505af1158015611b53573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611b7d57600080fd5b810190808051640100000000811115611b9557600080fd5b82810190506020810184811115611bab57600080fd5b8151856001820283011164010000000082111715611bc857600080fd5b505092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff1663f8b98ab16040805190810160405280601e81526020017f726563656970742d7072696e742e737563636573733a66756e6374696f6e0000815250866040516020018083805190602001908083835b602083101515611c605780518252602082019150602081019050602083039250611c3b565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611cd05780518252602082019150602081019050602083039250611cab565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611d5757600080fd5b505af1158015611d6b573d6000803e3d6000fd5b505050506040513d6020811015611d8157600080fd5b810190808051806c0100000000000000000000000090049068010000000000000000900463ffffffff1690916020019190939291909392919050505063ffffffff16906401000000000217680100000000000000000281526020018473ffffffffffffffffffffffffffffffffffffffff1663f8b98ab16040805190810160405280601b81526020017f726563656970742d7072696e742e6661696c3a66756e6374696f6e0000000000815250866040516020018083805190602001908083835b602083101515611e675780518252602082019150602081019050602083039250611e42565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611ed75780518252602082019150602081019050602083039250611eb2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611f5e57600080fd5b505af1158015611f72573d6000803e3d6000fd5b505050506040513d6020811015611f8857600080fd5b810190808051806c0100000000000000000000000090049068010000000000000000900463ffffffff1690916020019190939291909392919050505063ffffffff169064010000000002176801000000000000000002815250905092915050565b611ff1612a80565b611ffb8383612845565b151561206f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7265636569707420637265617465206973206e6f74206578697374730000000081525060200191505060405180910390fd5b6080604051908101604052808381526020018473ffffffffffffffffffffffffffffffffffffffff1663e82617fb606060405190810160405280602181526020017f726563656970742d6372656174652e73657373696f6e2e69643a75696e74323581526020017f3600000000000000000000000000000000000000000000000000000000000000815250866040516020018083805190602001908083835b602083101515612133578051825260208201915060208101905060208303925061210e565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156121a3578051825260208201915060208101905060208303925061217e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561222a57600080fd5b505af115801561223e573d6000803e3d6000fd5b505050506040513d602081101561225457600080fd5b810190808051906020019092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff1663d8b85d456040805190810160405280601f81526020017f726563656970742d6372656174652e737563636573733a66756e6374696f6e00815250866040516020018083805190602001908083835b6020831015156122f557805182526020820191506020810190506020830392506122d0565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156123655780518252602082019150602081019050602083039250612340565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156123ec57600080fd5b505af1158015612400573d6000803e3d6000fd5b505050506040513d602081101561241657600080fd5b810190808051806c0100000000000000000000000090049068010000000000000000900463ffffffff1690916020019190939291909392919050505063ffffffff16906401000000000217680100000000000000000281526020018473ffffffffffffffffffffffffffffffffffffffff1663f8b98ab16040805190810160405280601c81526020017f726563656970742d6372656174652e6661696c3a66756e6374696f6e00000000815250866040516020018083805190602001908083835b6020831015156124fc57805182526020820191506020810190506020830392506124d7565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561256c5780518252602082019150602081019050602083039250612547565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156125f357600080fd5b505af1158015612607573d6000803e3d6000fd5b505050506040513d602081101561261d57600080fd5b810190808051806c0100000000000000000000000090049068010000000000000000900463ffffffff1690916020019190939291909392919050505063ffffffff169064010000000002176801000000000000000002815250905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166317e7dd226040805190810160405280601c81526020017f726563656970742d7072696e742e6578697374733a626f6f6c65616e00000000815250846040516020018083805190602001908083835b60208310151561270b57805182526020820191506020810190506020830392506126e6565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561277b5780518252602082019150602081019050602083039250612756565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561280257600080fd5b505af1158015612816573d6000803e3d6000fd5b505050506040513d602081101561282c57600080fd5b8101908080519060200190929190505050905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166317e7dd226040805190810160405280601d81526020017f726563656970742d6372656174652e6578697374733a626f6f6c65616e000000815250846040516020018083805190602001908083835b6020831015156128d257805182526020820191506020810190506020830392506128ad565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515612942578051825260208201915060208101905060208303925061291d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156129c957600080fd5b505af11580156129dd573d6000803e3d6000fd5b505050506040513d60208110156129f357600080fd5b8101908080519060200190929190505050905092915050565b60e060405190810160405280600081526020016000815260200160608152602001606081526020016060815260200160008063ffffffff169064010000000002176801000000000000000002815260200160008063ffffffff16906401000000000217680100000000000000000281525090565b608060405190810160405280600081526020016000815260200160008063ffffffff169064010000000002176801000000000000000002815260200160008063ffffffff169064010000000002176801000000000000000002815250905600a165627a7a72305820f06a66ba18baf290267b2f46bc2d15aa144c2a92ece0f41ae32b371ccad0118e0029";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_KILL = "kill";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_ONNEXTRECEIPTCREATE = "onNextReceiptCreate";

    public static final String FUNC_SUCCESSCREATE = "successCreate";

    public static final String FUNC_FAILCREATE = "failCreate";

    public static final String FUNC_ONNEXTRECEIPTPRINT = "onNextReceiptPrint";

    public static final String FUNC_SUCCESSPRINT = "successPrint";

    public static final String FUNC_FAILPRINT = "failPrint";

    public static final Event RECEIPTCREATE_EVENT = new Event("ReceiptCreate", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event RECEIPTPRINT_EVENT = new Event("ReceiptPrint", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    protected PrinterOracle(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PrinterOracle(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<String> name() {
        final Function function = new Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> kill() {
        final Function function = new Function(
                FUNC_KILL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<PrinterOracle> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _config) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_config)));
        return deployRemoteCall(PrinterOracle.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<PrinterOracle> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _config) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_config)));
        return deployRemoteCall(PrinterOracle.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public List<ReceiptCreateEventResponse> getReceiptCreateEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECEIPTCREATE_EVENT, transactionReceipt);
        ArrayList<ReceiptCreateEventResponse> responses = new ArrayList<ReceiptCreateEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ReceiptCreateEventResponse typedResponse = new ReceiptCreateEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._commandId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._sessionId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ReceiptCreateEventResponse> receiptCreateEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ReceiptCreateEventResponse>() {
            @Override
            public ReceiptCreateEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECEIPTCREATE_EVENT, log);
                ReceiptCreateEventResponse typedResponse = new ReceiptCreateEventResponse();
                typedResponse.log = log;
                typedResponse._commandId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._sessionId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ReceiptCreateEventResponse> receiptCreateEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECEIPTCREATE_EVENT));
        return receiptCreateEventObservable(filter);
    }

    public List<ReceiptPrintEventResponse> getReceiptPrintEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECEIPTPRINT_EVENT, transactionReceipt);
        ArrayList<ReceiptPrintEventResponse> responses = new ArrayList<ReceiptPrintEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ReceiptPrintEventResponse typedResponse = new ReceiptPrintEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._commandId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._sessionId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._receiptId = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._data = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._params = (String) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ReceiptPrintEventResponse> receiptPrintEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ReceiptPrintEventResponse>() {
            @Override
            public ReceiptPrintEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECEIPTPRINT_EVENT, log);
                ReceiptPrintEventResponse typedResponse = new ReceiptPrintEventResponse();
                typedResponse.log = log;
                typedResponse._commandId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._sessionId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._receiptId = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._data = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._params = (String) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ReceiptPrintEventResponse> receiptPrintEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECEIPTPRINT_EVENT));
        return receiptPrintEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> onNextReceiptCreate(BigInteger _commandId) {
        final Function function = new Function(
                FUNC_ONNEXTRECEIPTCREATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_commandId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> successCreate(BigInteger _commandId, String _receiptId, String _url) {
        final Function function = new Function(
                FUNC_SUCCESSCREATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_commandId), 
                new org.web3j.abi.datatypes.Utf8String(_receiptId), 
                new org.web3j.abi.datatypes.Utf8String(_url)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> failCreate(BigInteger _commandId) {
        final Function function = new Function(
                FUNC_FAILCREATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_commandId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> onNextReceiptPrint(BigInteger _commandId) {
        final Function function = new Function(
                FUNC_ONNEXTRECEIPTPRINT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_commandId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> successPrint(BigInteger _commandId) {
        final Function function = new Function(
                FUNC_SUCCESSPRINT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_commandId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> failPrint(BigInteger _commandId) {
        final Function function = new Function(
                FUNC_FAILPRINT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_commandId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static PrinterOracle load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PrinterOracle(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static PrinterOracle load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PrinterOracle(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public interface PrinterOracleEvent extends SmartContractEvent {
    }

    public static class ReceiptCreateEventResponse implements PrinterOracleEvent {
        public Log log;

        public BigInteger _commandId;

        public BigInteger _sessionId;
    }

    public static class ReceiptPrintEventResponse implements PrinterOracleEvent {
        public Log log;

        public BigInteger _commandId;

        public BigInteger _sessionId;

        public String _receiptId;

        public String _data;

        public String _params;
    }
}
