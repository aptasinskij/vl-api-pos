package com.skysoft.vaultlogic.contracts;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.contracts.SmartContractEvent;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class ApplicationStorage extends Contract {
    private static final String BINARY = "0x60806040523480156200001157600080fd5b50604051602080620055318339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff161415151562000106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f53797374656d2073746174652076696f6c6174696f6e0000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e59c5296200019e620002ae640100000000026401000000009004565b306040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156200023e57808201518184015260208101905062000221565b50505050905090810190601f1680156200026c5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156200028d57600080fd5b505af1158015620002a2573d6000803e3d6000fd5b505050505050620002eb565b60606040805190810160405280601381526020017f6170706c69636174696f6e2d73746f7261676500000000000000000000000000815250905090565b61523680620002fb6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301f629c0146100d557806307d8ef9a1461012257806308114c9d146101955780632f2bb438146102025780634980e0b8146103815780638da5cb5b146104845780639507d39a146104db5780639fdc3a4d1461065a578063c3c5a54714610700578063d32cca471461075b578063edcce1b31461079c578063f004a7e41461089f578063f6efa674146108d6578063ff78b4521461097c575b600080fd5b3480156100e157600080fd5b5061012060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e9565b005b34801561012e57600080fd5b5061019360048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ac0565b005b3480156101a157600080fd5b506101c060048036038101908080359060200190929190505050610bd0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020e57600080fd5b5061022d60048036038101908080359060200190929190505050610c3f565b60405180806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838103835288818151815260200191508051906020019080838360005b838110156102db5780820151818401526020810190506102c0565b50505050905090810190601f1680156103085780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015610341578082015181840152602081019050610326565b50505050905090810190601f16801561036e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561038d57600080fd5b5061048260048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf0565b005b34801561049057600080fd5b50610499610f4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e757600080fd5b5061050660048036038101908080359060200190929190505050610f74565b60405180806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838103835288818151815260200191508051906020019080838360005b838110156105b4578082015181840152602081019050610599565b50505050905090810190601f1680156105e15780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101561061a5780820151818401526020810190506105ff565b50505050905090810190601f1680156106475780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561066657600080fd5b5061068560048036038101908080359060200190929190505050610ff6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106c55780820151818401526020810190506106aa565b50505050905090810190601f1680156106f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561070c57600080fd5b50610741600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611065565b604051808215151515815260200191505060405180910390f35b34801561076757600080fd5b50610786600480360381019080803590602001909291905050506110d4565b6040518082815260200191505060405180910390f35b3480156107a857600080fd5b5061089d60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611143565b005b3480156108ab57600080fd5b506108d4600480360381019080803590602001909291908035906020019092919050505061133c565b005b3480156108e257600080fd5b50610901600480360381019080803590602001909291905050506113e7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610941578082015181840152602081019050610926565b50505050905090810190601f16801561096e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561098857600080fd5b506109a760048036038101908080359060200190929190505050611456565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a518282610a2c6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff1661168e9092919063ffffffff16565b7fecc5a039ee5311e887972ef4263d65344c7ca962ba3ecd33e66faef4ee5333518282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b610b288282610b036040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff166118129092919063ffffffff16565b7f3908ab5caf44fc3e7a4b58da20fc1794f0301ec457d66b301c4939be57ec650182826040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b91578082015181840152602081019050610b76565b50505050905090810190601f168015610bbe5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b6000610c3882610c146040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff166119cf90919063ffffffff16565b9050919050565b606060006060600080610c5061519c565b610cb687610c926040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16611b4790919063ffffffff16565b9050806020015195508060400151945080606001519350806080015192508060a001516002811115610ce457fe5b91505091939590929450565b610dc560c0604051908101604052808881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001836002811115610d5557fe5b6002811115610d6057fe5b815250610da16040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff1661259d90919063ffffffff16565b507fb2aef06aed6c32445d7d5744b2ba436bbe89a3a8c4d06a5f19ebc62b8d3f6b1a86868686868660405180878152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838103835288818151815260200191508051906020019080838360005b83811015610ea1578082015181840152602081019050610e86565b50505050905090810190601f168015610ece5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015610f07578082015181840152602081019050610eec565b50505050905090810190601f168015610f345780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a1505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006060600080610fe386610fbf6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff166134e690919063ffffffff16565b9450945094509450945091939590929450565b606061105e8261103a6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16613add90919063ffffffff16565b9050919050565b60006110cd826110a96040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16613cab90919063ffffffff16565b9050919050565b600061113c826111186040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16613ead90919063ffffffff16565b9050919050565b6111b386868686868661118a6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16614025909695949392919063ffffffff16565b7fb2aef06aed6c32445d7d5744b2ba436bbe89a3a8c4d06a5f19ebc62b8d3f6b1a86868686868660405180878152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101561128e578082015181840152602081019050611273565b50505050905090810190601f1680156112bb5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b838110156112f45780820151818401526020810190506112d9565b50505050905090810190601f1680156113215780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a1505050505050565b6113a4828261137f6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16614a569092919063ffffffff16565b7f565fdede77c2d98cf7ef898d489425bd022f8a537b7f7b8e28b0045866347fdf8282604051808381526020018281526020019250505060405180910390a15050565b606061144f8261142b6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16614bae90919063ffffffff16565b9050919050565b60006114be8261149a6040805190810160405280600881526020017f64617461626173650000000000000000000000000000000000000000000000008152506114c5565b73ffffffffffffffffffffffffffffffffffffffff16614d7c90919063ffffffff16565b9050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663693ec85e836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611571578082015181840152602081019050611556565b50505050905090810190601f16801561159e5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156115bd57600080fd5b505af11580156115d1573d6000803e3d6000fd5b505050506040513d60208110156115e757600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1614151515611689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f53797374656d2073746174652076696f6c6174696f6e0000000000000000000081525060200191505060405180910390fd5b919050565b6116988383614ef4565b151561170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16635a2bf25a6117676040805190810160405280601381526020017f6170706c69636174696f6e5f6164647265737300000000000000000000000000815250856150bb565b836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156117f557600080fd5b505af1158015611809573d6000803e3d6000fd5b50505050505050565b61181c8383614ef4565b1515611890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f58660666118eb6040805190810160405280600f81526020017f6170706c69636174696f6e5f75726c0000000000000000000000000000000000815250856150bb565b836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561196557808201518184015260208101905061194a565b50505050905090810190601f1680156119925780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156119b257600080fd5b505af11580156119c6573d6000803e3d6000fd5b50505050505050565b60006119db8383614ef4565b1515611a4f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16634c77e5ba611aaa6040805190810160405280601181526020017f6170706c69636174696f6e5f6f776e6572000000000000000000000000000000815250856150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611b0457600080fd5b505af1158015611b18573d6000803e3d6000fd5b505050506040513d6020811015611b2e57600080fd5b8101908080519060200190929190505050905092915050565b611b4f61519c565b611b598383614ef4565b1515611bcd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b60c0604051908101604052808381526020018473ffffffffffffffffffffffffffffffffffffffff1663a209a29c6040805190810160405280601081526020017f6170706c69636174696f6e5f6e616d6500000000000000000000000000000000815250866040516020018083805190602001908083835b602083101515611c6a5780518252602082019150602081019050602083039250611c45565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611cda5780518252602082019150602081019050602083039250611cb5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015611d6157600080fd5b505af1158015611d75573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611d9f57600080fd5b810190808051640100000000811115611db757600080fd5b82810190506020810184811115611dcd57600080fd5b8151856001820283011164010000000082111715611dea57600080fd5b505092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff16634c77e5ba6040805190810160405280601181526020017f6170706c69636174696f6e5f6f776e6572000000000000000000000000000000815250866040516020018083805190602001908083835b602083101515611e825780518252602082019150602081019050602083039250611e5d565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611ef25780518252602082019150602081019050602083039250611ecd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611f7957600080fd5b505af1158015611f8d573d6000803e3d6000fd5b505050506040513d6020811015611fa357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663a209a29c6040805190810160405280600f81526020017f6170706c69636174696f6e5f75726c0000000000000000000000000000000000815250866040516020018083805190602001908083835b60208310151561205a5780518252602082019150602081019050602083039250612035565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156120ca57805182526020820191506020810190506020830392506120a5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561215157600080fd5b505af1158015612165573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561218f57600080fd5b8101908080516401000000008111156121a757600080fd5b828101905060208101848111156121bd57600080fd5b81518560018202830111640100000000821117156121da57600080fd5b505092919050505081526020018473ffffffffffffffffffffffffffffffffffffffff16634c77e5ba6040805190810160405280601381526020017f6170706c69636174696f6e5f6164647265737300000000000000000000000000815250866040516020018083805190602001908083835b602083101515612272578051825260208201915060208101905060208303925061224d565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156122e257805182526020820191506020810190506020830392506122bd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561236957600080fd5b505af115801561237d573d6000803e3d6000fd5b505050506040513d602081101561239357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663e82617fb6040805190810160405280600e81526020017f6170706c69636174696f6e5f6964000000000000000000000000000000000000815250866040516020018083805190602001908083835b60208310151561244a5780518252602082019150602081019050602083039250612425565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156124ba5780518252602082019150602081019050602083039250612495565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561254157600080fd5b505af1158015612555573d6000803e3d6000fd5b505050506040513d602081101561256b57600080fd5b8101908080519060200190929190505050600281111561258757fe5b600281111561259257fe5b815250905092915050565b60006125ad838360000151614ef4565b151515612622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4170706c69636174696f6e20616c72656164792065786973747300000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663ffb4f6236040805190810160405280600e81526020017f6170706c69636174696f6e5f696400000000000000000000000000000000000081525084600001516040516020018083805190602001908083835b6020831015156126b1578051825260208201915060208101905060208303925061268c565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561272157805182526020820191506020810190506020830392506126fc565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902084600001516040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b1580156127b457600080fd5b505af11580156127c8573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663f58660666040805190810160405280601081526020017f6170706c69636174696f6e5f6e616d650000000000000000000000000000000081525084600001516040516020018083805190602001908083835b60208310151561285b5780518252602082019150602081019050602083039250612836565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156128cb57805182526020820191506020810190506020830392506128a6565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902084602001516040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561297657808201518184015260208101905061295b565b50505050905090810190601f1680156129a35780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156129c357600080fd5b505af11580156129d7573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16635a2bf25a6040805190810160405280601181526020017f6170706c69636174696f6e5f6f776e657200000000000000000000000000000081525084600001516040516020018083805190602001908083835b602083101515612a6a5780518252602082019150602081019050602083039250612a45565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515612ada5780518252602082019150602081019050602083039250612ab5565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902084604001516040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612b9957600080fd5b505af1158015612bad573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663f58660666040805190810160405280600f81526020017f6170706c69636174696f6e5f75726c000000000000000000000000000000000081525084600001516040516020018083805190602001908083835b602083101515612c405780518252602082019150602081019050602083039250612c1b565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515612cb05780518252602082019150602081019050602083039250612c8b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902084606001516040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612d5b578082015181840152602081019050612d40565b50505050905090810190601f168015612d885780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612da857600080fd5b505af1158015612dbc573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16635a2bf25a6040805190810160405280601381526020017f6170706c69636174696f6e5f616464726573730000000000000000000000000081525084600001516040516020018083805190602001908083835b602083101515612e4f5780518252602082019150602081019050602083039250612e2a565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515612ebf5780518252602082019150602081019050602083039250612e9a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902084608001516040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612f7e57600080fd5b505af1158015612f92573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663ffb4f6236040805190810160405280601281526020017f6170706c69636174696f6e5f737461747573000000000000000000000000000081525084600001516040516020018083805190602001908083835b6020831015156130255780518252602082019150602081019050602083039250613000565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156130955780518252602082019150602081019050602083039250613070565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208460a0015160028111156130d257fe5b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b15801561313357600080fd5b505af1158015613147573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16633eba9ed26040805190810160405280601681526020017f6170706c69636174696f6e5f726567697374657265640000000000000000000081525084608001516040516020018083805190602001908083835b6020831015156131da57805182526020820191506020810190506020830392506131b5565b6001836020036101000a0380198251168184511680821785525050505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b6020831015156132855780518252602082019150602081019050602083039250613260565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060016040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018215151515815260200192505050600060405180830381600087803b15801561331957600080fd5b505af115801561332d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16633eba9ed26040805190810160405280601281526020017f6170706c69636174696f6e2e657869737473000000000000000000000000000081525084600001516040516020018083805190602001908083835b6020831015156133c0578051825260208201915060208101905060208303925061339b565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515613430578051825260208201915060208101905060208303925061340b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060016040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018215151515815260200192505050600060405180830381600087803b1580156134c457600080fd5b505af11580156134d8573d6000803e3d6000fd5b505050506001905092915050565b6060600060606000806134f98787614ef4565b151561356d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff1663a209a29c6135c86040805190810160405280601081526020017f6170706c69636174696f6e5f6e616d6500000000000000000000000000000000815250896150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561362257600080fd5b505af1158015613636573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561366057600080fd5b81019080805164010000000081111561367857600080fd5b8281019050602081018481111561368e57600080fd5b81518560018202830111640100000000821117156136ab57600080fd5b505092919050505094508673ffffffffffffffffffffffffffffffffffffffff16634c77e5ba6137106040805190810160405280601181526020017f6170706c69636174696f6e5f6f776e6572000000000000000000000000000000815250896150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561376a57600080fd5b505af115801561377e573d6000803e3d6000fd5b505050506040513d602081101561379457600080fd5b810190808051906020019092919050505093508673ffffffffffffffffffffffffffffffffffffffff1663a209a29c6138026040805190810160405280600f81526020017f6170706c69636174696f6e5f75726c0000000000000000000000000000000000815250896150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561385c57600080fd5b505af1158015613870573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561389a57600080fd5b8101908080516401000000008111156138b257600080fd5b828101905060208101848111156138c857600080fd5b81518560018202830111640100000000821117156138e557600080fd5b505092919050505092508673ffffffffffffffffffffffffffffffffffffffff16634c77e5ba61394a6040805190810160405280601381526020017f6170706c69636174696f6e5f6164647265737300000000000000000000000000815250896150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156139a457600080fd5b505af11580156139b8573d6000803e3d6000fd5b505050506040513d60208110156139ce57600080fd5b810190808051906020019092919050505091508673ffffffffffffffffffffffffffffffffffffffff1663e82617fb613a3c6040805190810160405280601281526020017f6170706c69636174696f6e5f7374617475730000000000000000000000000000815250896150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015613a9657600080fd5b505af1158015613aaa573d6000803e3d6000fd5b505050506040513d6020811015613ac057600080fd5b810190808051906020019092919050505090509295509295909350565b6060613ae98383614ef4565b1515613b5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a209a29c613bb86040805190810160405280600f81526020017f6170706c69636174696f6e5f75726c0000000000000000000000000000000000815250856150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015613c1257600080fd5b505af1158015613c26573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613c5057600080fd5b810190808051640100000000811115613c6857600080fd5b82810190506020810184811115613c7e57600080fd5b8151856001820283011164010000000082111715613c9b57600080fd5b5050929190505050905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166317e7dd226040805190810160405280601681526020017f6170706c69636174696f6e5f7265676973746572656400000000000000000000815250846040516020018083805190602001908083835b602083101515613d385780518252602082019150602081019050602083039250613d13565b6001836020036101000a0380198251168184511680821785525050505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b602083101515613de35780518252602082019150602081019050602083039250613dbe565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015613e6a57600080fd5b505af1158015613e7e573d6000803e3d6000fd5b505050506040513d6020811015613e9457600080fd5b8101908080519060200190929190505050905092915050565b6000613eb98383614ef4565b1515613f2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663e82617fb613f886040805190810160405280601281526020017f6170706c69636174696f6e5f7374617475730000000000000000000000000000815250856150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015613fe257600080fd5b505af1158015613ff6573d6000803e3d6000fd5b505050506040513d602081101561400c57600080fd5b8101908080519060200190929190505050905092915050565b61402f8787614ef4565b1515156140a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4170706c69636174696f6e20616c72656164792065786973747300000000000081525060200191505060405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff1663ffb4f6236140ff6040805190810160405280600e81526020017f6170706c69636174696f6e5f6964000000000000000000000000000000000000815250896150bb565b886040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b15801561416157600080fd5b505af1158015614175573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff1663f58660666141d46040805190810160405280601081526020017f6170706c69636174696f6e5f6e616d6500000000000000000000000000000000815250896150bb565b876040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561424e578082015181840152602081019050614233565b50505050905090810190601f16801561427b5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561429b57600080fd5b505af11580156142af573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16635a2bf25a61430e6040805190810160405280601181526020017f6170706c69636174696f6e5f6f776e6572000000000000000000000000000000815250896150bb565b866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561439c57600080fd5b505af11580156143b0573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff1663f586606661440f6040805190810160405280600f81526020017f6170706c69636174696f6e5f75726c0000000000000000000000000000000000815250896150bb565b856040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561448957808201518184015260208101905061446e565b50505050905090810190601f1680156144b65780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156144d657600080fd5b505af11580156144ea573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16635a2bf25a6145496040805190810160405280601381526020017f6170706c69636174696f6e5f6164647265737300000000000000000000000000815250896150bb565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156145d757600080fd5b505af11580156145eb573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff1663ffb4f62361464a6040805190810160405280601281526020017f6170706c69636174696f6e5f7374617475730000000000000000000000000000815250896150bb565b836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b1580156146ac57600080fd5b505af11580156146c0573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16633eba9ed26040805190810160405280601681526020017f6170706c69636174696f6e5f7265676973746572656400000000000000000000815250846040516020018083805190602001908083835b60208310151561474f578051825260208201915060208101905060208303925061472a565b6001836020036101000a0380198251168184511680821785525050505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b6020831015156147fa57805182526020820191506020810190506020830392506147d5565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060016040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018215151515815260200192505050600060405180830381600087803b15801561488e57600080fd5b505af11580156148a2573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16633eba9ed26040805190810160405280601281526020017f6170706c69636174696f6e2e6578697374730000000000000000000000000000815250886040516020018083805190602001908083835b602083101515614931578051825260208201915060208101905060208303925061490c565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156149a1578051825260208201915060208101905060208303925061497c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060016040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018215151515815260200192505050600060405180830381600087803b158015614a3557600080fd5b505af1158015614a49573d6000803e3d6000fd5b5050505050505050505050565b614a608383614ef4565b1515614ad4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663ffb4f623614b2f6040805190810160405280601281526020017f6170706c69636174696f6e5f7374617475730000000000000000000000000000815250856150bb565b836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b158015614b9157600080fd5b505af1158015614ba5573d6000803e3d6000fd5b50505050505050565b6060614bba8383614ef4565b1515614c2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a209a29c614c896040805190810160405280601081526020017f6170706c69636174696f6e5f6e616d6500000000000000000000000000000000815250856150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b158015614ce357600080fd5b505af1158015614cf7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015614d2157600080fd5b810190808051640100000000811115614d3957600080fd5b82810190506020810184811115614d4f57600080fd5b8151856001820283011164010000000082111715614d6c57600080fd5b5050929190505050905092915050565b6000614d888383614ef4565b1515614dfc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4170706c69636174696f6e206973206e6f74206578697374730000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16634c77e5ba614e576040805190810160405280601381526020017f6170706c69636174696f6e5f6164647265737300000000000000000000000000815250856150bb565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015614eb157600080fd5b505af1158015614ec5573d6000803e3d6000fd5b505050506040513d6020811015614edb57600080fd5b8101908080519060200190929190505050905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166317e7dd226040805190810160405280601281526020017f6170706c69636174696f6e2e6578697374730000000000000000000000000000815250846040516020018083805190602001908083835b602083101515614f815780518252602082019150602081019050602083039250614f5c565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515614ff15780518252602082019150602081019050602083039250614fcc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561507857600080fd5b505af115801561508c573d6000803e3d6000fd5b505050506040513d60208110156150a257600080fd5b8101908080519060200190929190505050905092915050565b600082826040516020018083805190602001908083835b6020831015156150f757805182526020820191506020810190506020830392506150d2565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156151675780518252602082019150602081019050602083039250615142565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b60c0604051908101604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000600281111561520457fe5b815250905600a165627a7a72305820732a6d56752b93f014b1bdc158dcbc918931968187cc2e7157566133b2f05d2c0029";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_CREATEAPPLICATION = "createApplication";

    public static final String FUNC_RETRIEVEAPPLICATION = "retrieveApplication";

    public static final String FUNC_SAVE = "save";

    public static final String FUNC_GET = "get";

    public static final String FUNC_ISREGISTERED = "isRegistered";

    public static final String FUNC_GETAPPLICATIONNAME = "getApplicationName";

    public static final String FUNC_GETAPPLICATIONOWNER = "getApplicationOwner";

    public static final String FUNC_GETAPPLICATIONURL = "getApplicationUrl";

    public static final String FUNC_SETAPPLICATIONURL = "setApplicationUrl";

    public static final String FUNC_GETAPPLICATIONADDRESS = "getApplicationAddress";

    public static final String FUNC_SETAPPLICATIONADDRESS = "setApplicationAddress";

    public static final String FUNC_GETAPPLICATIONSTATUS = "getApplicationStatus";

    public static final String FUNC_SETAPPLICATIONSTATUS = "setApplicationStatus";

    public static final Event APPLICATIONSAVED_EVENT = new Event("ApplicationSaved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPLICATIONURLUPDATED_EVENT = new Event("ApplicationUrlUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event APPLICATIONADDRESSUPDATED_EVENT = new Event("ApplicationAddressUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event APPLICATIONSTATUSUPDATED_EVENT = new Event("ApplicationStatusUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("77142", "0x524c902f51909b230b295e73f2eb8c9e90d9ed78");
    }

    protected ApplicationStorage(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ApplicationStorage(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<ApplicationStorage> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String registry) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(registry)));
        return deployRemoteCall(ApplicationStorage.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<ApplicationStorage> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String registry) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(registry)));
        return deployRemoteCall(ApplicationStorage.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public List<ApplicationSavedEventResponse> getApplicationSavedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONSAVED_EVENT, transactionReceipt);
        ArrayList<ApplicationSavedEventResponse> responses = new ArrayList<ApplicationSavedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationSavedEventResponse typedResponse = new ApplicationSavedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.name = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.owner = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.url = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationSavedEventResponse> applicationSavedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationSavedEventResponse>() {
            @Override
            public ApplicationSavedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONSAVED_EVENT, log);
                ApplicationSavedEventResponse typedResponse = new ApplicationSavedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.name = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.owner = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.url = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationSavedEventResponse> applicationSavedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONSAVED_EVENT));
        return applicationSavedEventObservable(filter);
    }

    public List<ApplicationUrlUpdatedEventResponse> getApplicationUrlUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONURLUPDATED_EVENT, transactionReceipt);
        ArrayList<ApplicationUrlUpdatedEventResponse> responses = new ArrayList<ApplicationUrlUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationUrlUpdatedEventResponse typedResponse = new ApplicationUrlUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.url = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationUrlUpdatedEventResponse> applicationUrlUpdatedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationUrlUpdatedEventResponse>() {
            @Override
            public ApplicationUrlUpdatedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONURLUPDATED_EVENT, log);
                ApplicationUrlUpdatedEventResponse typedResponse = new ApplicationUrlUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.url = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationUrlUpdatedEventResponse> applicationUrlUpdatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONURLUPDATED_EVENT));
        return applicationUrlUpdatedEventObservable(filter);
    }

    public List<ApplicationAddressUpdatedEventResponse> getApplicationAddressUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONADDRESSUPDATED_EVENT, transactionReceipt);
        ArrayList<ApplicationAddressUpdatedEventResponse> responses = new ArrayList<ApplicationAddressUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationAddressUpdatedEventResponse typedResponse = new ApplicationAddressUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationAddressUpdatedEventResponse> applicationAddressUpdatedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationAddressUpdatedEventResponse>() {
            @Override
            public ApplicationAddressUpdatedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONADDRESSUPDATED_EVENT, log);
                ApplicationAddressUpdatedEventResponse typedResponse = new ApplicationAddressUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationAddressUpdatedEventResponse> applicationAddressUpdatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONADDRESSUPDATED_EVENT));
        return applicationAddressUpdatedEventObservable(filter);
    }

    public List<ApplicationStatusUpdatedEventResponse> getApplicationStatusUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONSTATUSUPDATED_EVENT, transactionReceipt);
        ArrayList<ApplicationStatusUpdatedEventResponse> responses = new ArrayList<ApplicationStatusUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationStatusUpdatedEventResponse typedResponse = new ApplicationStatusUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationStatusUpdatedEventResponse> applicationStatusUpdatedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationStatusUpdatedEventResponse>() {
            @Override
            public ApplicationStatusUpdatedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONSTATUSUPDATED_EVENT, log);
                ApplicationStatusUpdatedEventResponse typedResponse = new ApplicationStatusUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationStatusUpdatedEventResponse> applicationStatusUpdatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONSTATUSUPDATED_EVENT));
        return applicationStatusUpdatedEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> createApplication(BigInteger _id, String _name, String _owner, String _url, String _appAddr, BigInteger _status) {
        final Function function = new Function(
                FUNC_CREATEAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_id), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Address(_owner), 
                new org.web3j.abi.datatypes.Utf8String(_url), 
                new org.web3j.abi.datatypes.Address(_appAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(_status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> retrieveApplication(BigInteger _id) {
        final Function function = new Function(FUNC_RETRIEVEAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> save(BigInteger appId, String name, String owner, String url, String appAddr, BigInteger status) {
        final Function function = new Function(
                FUNC_SAVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Address(owner), 
                new org.web3j.abi.datatypes.Utf8String(url), 
                new org.web3j.abi.datatypes.Address(appAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> get(BigInteger appId) {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<Boolean> isRegistered(String _applicationAddress) {
        final Function function = new Function(FUNC_ISREGISTERED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_applicationAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> getApplicationName(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getApplicationOwner(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getApplicationUrl(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONURL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setApplicationUrl(BigInteger appId, String url) {
        final Function function = new Function(
                FUNC_SETAPPLICATIONURL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.Utf8String(url)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getApplicationAddress(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setApplicationAddress(BigInteger appId, String appAddr) {
        final Function function = new Function(
                FUNC_SETAPPLICATIONADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.Address(appAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getApplicationStatus(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONSTATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> setApplicationStatus(BigInteger appId, BigInteger status) {
        final Function function = new Function(
                FUNC_SETAPPLICATIONSTATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static ApplicationStorage load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ApplicationStorage(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static ApplicationStorage load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ApplicationStorage(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public interface ApplicationStorageEvent extends SmartContractEvent {
    }

    public static class ApplicationSavedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public String name;

        public String owner;

        public String url;

        public String appAddr;

        public BigInteger status;
    }

    public static class ApplicationUrlUpdatedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public String url;
    }

    public static class ApplicationAddressUpdatedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public String appAddr;
    }

    public static class ApplicationStatusUpdatedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public BigInteger status;
    }
}
