package com.skysoft.vaultlogic.contracts;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.contracts.SmartContractEvent;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class ApplicationStorage extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_KILL = "kill";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_CREATEAPPLICATION = "createApplication";

    public static final String FUNC_RETRIEVEAPPLICATION = "retrieveApplication";

    public static final String FUNC_SAVE = "save";

    public static final String FUNC_GET = "get";

    public static final String FUNC_ISREGISTERED = "isRegistered";

    public static final String FUNC_GETAPPLICATIONNAME = "getApplicationName";

    public static final String FUNC_GETAPPLICATIONOWNER = "getApplicationOwner";

    public static final String FUNC_GETAPPLICATIONURL = "getApplicationUrl";

    public static final String FUNC_SETAPPLICATIONURL = "setApplicationUrl";

    public static final String FUNC_GETAPPLICATIONADDRESS = "getApplicationAddress";

    public static final String FUNC_SETAPPLICATIONADDRESS = "setApplicationAddress";

    public static final String FUNC_GETAPPLICATIONSTATUS = "getApplicationStatus";

    public static final String FUNC_SETAPPLICATIONSTATUS = "setApplicationStatus";

    public static final Event APPLICATIONSAVED_EVENT = new Event("ApplicationSaved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPLICATIONURLUPDATED_EVENT = new Event("ApplicationUrlUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event APPLICATIONADDRESSUPDATED_EVENT = new Event("ApplicationAddressUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event APPLICATIONSTATUSUPDATED_EVENT = new Event("ApplicationStatusUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("77142", "0x5ae1e3180413497063ed19f8119dd0510fe85ff3");
    }

    protected ApplicationStorage(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ApplicationStorage(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<String> name() {
        final Function function = new Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> kill() {
        final Function function = new Function(
                FUNC_KILL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<ApplicationStorage> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _config) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_config)));
        return deployRemoteCall(ApplicationStorage.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<ApplicationStorage> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _config) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_config)));
        return deployRemoteCall(ApplicationStorage.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public List<ApplicationSavedEventResponse> getApplicationSavedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONSAVED_EVENT, transactionReceipt);
        ArrayList<ApplicationSavedEventResponse> responses = new ArrayList<ApplicationSavedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationSavedEventResponse typedResponse = new ApplicationSavedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.name = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.owner = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.url = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationSavedEventResponse> applicationSavedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationSavedEventResponse>() {
            @Override
            public ApplicationSavedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONSAVED_EVENT, log);
                ApplicationSavedEventResponse typedResponse = new ApplicationSavedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.name = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.owner = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.url = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationSavedEventResponse> applicationSavedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONSAVED_EVENT));
        return applicationSavedEventObservable(filter);
    }

    public List<ApplicationUrlUpdatedEventResponse> getApplicationUrlUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONURLUPDATED_EVENT, transactionReceipt);
        ArrayList<ApplicationUrlUpdatedEventResponse> responses = new ArrayList<ApplicationUrlUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationUrlUpdatedEventResponse typedResponse = new ApplicationUrlUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.url = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationUrlUpdatedEventResponse> applicationUrlUpdatedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationUrlUpdatedEventResponse>() {
            @Override
            public ApplicationUrlUpdatedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONURLUPDATED_EVENT, log);
                ApplicationUrlUpdatedEventResponse typedResponse = new ApplicationUrlUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.url = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationUrlUpdatedEventResponse> applicationUrlUpdatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONURLUPDATED_EVENT));
        return applicationUrlUpdatedEventObservable(filter);
    }

    public List<ApplicationAddressUpdatedEventResponse> getApplicationAddressUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONADDRESSUPDATED_EVENT, transactionReceipt);
        ArrayList<ApplicationAddressUpdatedEventResponse> responses = new ArrayList<ApplicationAddressUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationAddressUpdatedEventResponse typedResponse = new ApplicationAddressUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationAddressUpdatedEventResponse> applicationAddressUpdatedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationAddressUpdatedEventResponse>() {
            @Override
            public ApplicationAddressUpdatedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONADDRESSUPDATED_EVENT, log);
                ApplicationAddressUpdatedEventResponse typedResponse = new ApplicationAddressUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.appAddr = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationAddressUpdatedEventResponse> applicationAddressUpdatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONADDRESSUPDATED_EVENT));
        return applicationAddressUpdatedEventObservable(filter);
    }

    public List<ApplicationStatusUpdatedEventResponse> getApplicationStatusUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLICATIONSTATUSUPDATED_EVENT, transactionReceipt);
        ArrayList<ApplicationStatusUpdatedEventResponse> responses = new ArrayList<ApplicationStatusUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplicationStatusUpdatedEventResponse typedResponse = new ApplicationStatusUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApplicationStatusUpdatedEventResponse> applicationStatusUpdatedEventObservable(EthFilter filter) {
        return web3j.ethLogObservable(filter).map(new Func1<Log, ApplicationStatusUpdatedEventResponse>() {
            @Override
            public ApplicationStatusUpdatedEventResponse call(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLICATIONSTATUSUPDATED_EVENT, log);
                ApplicationStatusUpdatedEventResponse typedResponse = new ApplicationStatusUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.appId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Observable<ApplicationStatusUpdatedEventResponse> applicationStatusUpdatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLICATIONSTATUSUPDATED_EVENT));
        return applicationStatusUpdatedEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> createApplication(BigInteger _id, String _name, String _owner, String _url, String _appAddr, BigInteger _status) {
        final Function function = new Function(
                FUNC_CREATEAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_id), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Address(_owner), 
                new org.web3j.abi.datatypes.Utf8String(_url), 
                new org.web3j.abi.datatypes.Address(_appAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(_status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> retrieveApplication(BigInteger _id) {
        final Function function = new Function(FUNC_RETRIEVEAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> save(BigInteger appId, String name, String owner, String url, String appAddr, BigInteger status) {
        final Function function = new Function(
                FUNC_SAVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Address(owner), 
                new org.web3j.abi.datatypes.Utf8String(url), 
                new org.web3j.abi.datatypes.Address(appAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> get(BigInteger appId) {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<Boolean> isRegistered(String _applicationAddress) {
        final Function function = new Function(FUNC_ISREGISTERED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_applicationAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> getApplicationName(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getApplicationOwner(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getApplicationUrl(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONURL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setApplicationUrl(BigInteger appId, String url) {
        final Function function = new Function(
                FUNC_SETAPPLICATIONURL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.Utf8String(url)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getApplicationAddress(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setApplicationAddress(BigInteger appId, String appAddr) {
        final Function function = new Function(
                FUNC_SETAPPLICATIONADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.Address(appAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getApplicationStatus(BigInteger appId) {
        final Function function = new Function(FUNC_GETAPPLICATIONSTATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> setApplicationStatus(BigInteger appId, BigInteger status) {
        final Function function = new Function(
                FUNC_SETAPPLICATIONSTATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(appId), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static ApplicationStorage load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ApplicationStorage(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static ApplicationStorage load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ApplicationStorage(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public interface ApplicationStorageEvent extends SmartContractEvent {
    }

    public static class ApplicationSavedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public String name;

        public String owner;

        public String url;

        public String appAddr;

        public BigInteger status;
    }

    public static class ApplicationUrlUpdatedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public String url;
    }

    public static class ApplicationAddressUpdatedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public String appAddr;
    }

    public static class ApplicationStatusUpdatedEventResponse implements ApplicationStorageEvent {
        public Log log;

        public BigInteger appId;

        public BigInteger status;
    }
}
